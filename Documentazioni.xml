<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ISE_ODL</name>
    </assembly>
    <members>
        <member name="T:ISE_ODL.App">
            <summary>
            App
            </summary>
        </member>
        <member name="M:ISE_ODL.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ISE_ODL.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:ISE_ODL.Converter.BoolToVisibility">
            <summary>
            La classe BoolToVisibility implementa l'interfaccia IValueConverter
            per convertire valori booleani in valori di visibilità (Visibility) in WPF.
            </summary>
        </member>
        <member name="M:ISE_ODL.Converter.BoolToVisibility.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converte un valore booleano in un valore di visibilità.
            </summary>
            <param name="value">Il valore booleano da convertire.</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Restituisce Visibility.Visible se il valore booleano è true; 
            altrimenti, restituisce Visibility.Collapsed.
            </returns>
        </member>
        <member name="M:ISE_ODL.Converter.BoolToVisibility.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Questo metodo non è implementato e lancia sempre un'eccezione.
            </summary>
            <param name="value">Il valore di visibilità da convertire indietro (non utilizzato).</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Non restituisce nulla poiché il metodo lancia sempre un'eccezione.
            </returns>
            <exception cref="T:System.NotImplementedException">Viene sempre lanciata poiché il metodo non è implementato.</exception>
        </member>
        <member name="T:ISE_ODL.Converter.DateTimeToDate">
            <summary>
            La classe DateTimeToDate implementa l'interfaccia IValueConverter
            per convertire valori DateTime in valori di Stringa (string) in WPF.
            </summary>
        </member>
        <member name="M:ISE_ODL.Converter.DateTimeToDate.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converte un valore DateTime in una Stringa.
            </summary>
            <param name="value">Il valore di tipo DateTime da convertire.</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Restituisce una stringa "/" se l'anno della data è inferiore al 2000; 
            altrimenti, restituisce la rappresentazione della data formattata come stringa breve ("d").
            </returns>
            <exception cref="T:System.InvalidCastException">Lanciata se il valore non è di tipo DateTime.</exception>
        </member>
        <member name="M:ISE_ODL.Converter.DateTimeToDate.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Questo metodo non è implementato e lancia sempre un'eccezione.
            </summary>
            <param name="value">Il valore di DateTime da convertire indietro (non utilizzato).</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Non restituisce nulla poiché il metodo lancia sempre un'eccezione.
            </returns>
            <exception cref="T:System.NotImplementedException">Viene sempre lanciata poiché il metodo non è implementato.</exception>
        </member>
        <member name="T:ISE_ODL.Converter.DateTimeToHourString">
            <summary>
            La classe DateTimeToHourString implementa l'interfaccia IValueConverter
            per convertire valori DateTime in valori di Stringa (string) che indicano solo l'ora in WPF.
            </summary>
        </member>
        <member name="M:ISE_ODL.Converter.DateTimeToHourString.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converte un valore DateTime in una stringa.
            </summary>
            <param name="value">Il valore di tipo DateTime da convertire.</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Restituisce una stringa "/" se l'anno della data è inferiore al 2000; 
            altrimenti, restituisce la rappresentazione dell'ora formattata come stringa breve ("t").
            </returns>
            <exception cref="T:System.InvalidCastException">Lanciata se il valore non è di tipo DateTime.</exception>
        </member>
        <member name="M:ISE_ODL.Converter.DateTimeToHourString.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Questo metodo non è implementato e lancia sempre un'eccezione.
            </summary>
            <param name="value">Il valore di DateTime da convertire indietro (non utilizzato).</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Non restituisce nulla poiché il metodo lancia sempre un'eccezione.
            </returns>
            <exception cref="T:System.NotImplementedException">Viene sempre lanciata poiché il metodo non è implementato.</exception>
        </member>
        <member name="T:ISE_ODL.Converter.DateToString">
            <summary>
            La classe DateToString implementa l'interfaccia IValueConverter
            per convertire valori DateOnly in valori di Stringa (string) in WPF.
            </summary>
        </member>
        <member name="M:ISE_ODL.Converter.DateToString.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converte un valore DateOnly in una Stringa.
            </summary>
            <param name="value">Il valore di tipo DateOnly da convertire.</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Restituisce una stringa "/" se l'anno della data è inferiore al 2000; 
            altrimenti, restituisce la rappresentazione della data.
            </returns>
            <exception cref="T:System.InvalidCastException">Lanciata se il valore non è di tipo DateOnly.</exception>
        </member>
        <member name="M:ISE_ODL.Converter.DateToString.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Questo metodo non è implementato e lancia sempre un'eccezione.
            </summary>
            <param name="value">Il valore di DateOnly da convertire indietro (non utilizzato).</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Non restituisce nulla poiché il metodo lancia sempre un'eccezione.
            </returns>
            <exception cref="T:System.NotImplementedException">Viene sempre lanciata poiché il metodo non è implementato.</exception>
        </member>
        <member name="T:ISE_ODL.Converter.FiltroToVisibility">
            <summary>
            La classe FiltroToVisibility implementa l'interfaccia IValueConverter
            per convertire valori Booleani in valori di Stringa (string) in WPF.
            </summary>
        </member>
        <member name="M:ISE_ODL.Converter.FiltroToVisibility.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converte un valore Booleano in una Visibilità.
            </summary>
            <param name="value">Il valore di tipo Booleano da convertire.</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Restituisce Visible se il Booleano è vero ; 
            altrimenti, restituisce Collpsed.
            </returns>
            <exception cref="T:System.InvalidCastException">Lanciata se il valore non è di tipo Booleano.</exception>
        </member>
        <member name="M:ISE_ODL.Converter.FiltroToVisibility.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Questo metodo non è implementato e lancia sempre un'eccezione.
            </summary>
            <param name="value">Il valore di visibilità da convertire indietro (non utilizzato).</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Non restituisce nulla poiché il metodo lancia sempre un'eccezione.
            </returns>
            <exception cref="T:System.NotImplementedException">Viene sempre lanciata poiché il metodo non è implementato.</exception>
        </member>
        <member name="T:ISE_ODL.Converter.NotBool">
            <summary>
            La classe NotBool implementa l'interfaccia IValueConverter
            per convertire valori Booleani in valori di Booleani (bool) in WPF.
            </summary>
        </member>
        <member name="M:ISE_ODL.Converter.NotBool.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converte un valore Booleano nel suo opposto.
            </summary>
            <param name="value">Il valore di tipo Booleano da convertire.</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Restituisce il Booleano Contrario; 
            </returns>
            <exception cref="T:System.InvalidCastException">Lanciata se il valore non è di tipo Booleano.</exception>
        </member>
        <member name="M:ISE_ODL.Converter.NotBool.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Questo metodo non è implementato e lancia sempre un'eccezione.
            </summary>
            <param name="value">Il valore di bool da convertire indietro (non utilizzato).</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Non restituisce nulla poiché il metodo lancia sempre un'eccezione.
            </returns>
            <exception cref="T:System.NotImplementedException">Viene sempre lanciata poiché il metodo non è implementato.</exception>
        </member>
        <member name="T:ISE_ODL.Converter.NotBoolToVisibility">
            <summary>
            La classe NotBoolToVisibility implementa l'interfaccia IValueConverter
            per convertire valori Booleani in valori di Visibility in WPF.
            </summary>
        </member>
        <member name="M:ISE_ODL.Converter.NotBoolToVisibility.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converte un valore booleano in un valore di visibilità.
            </summary>
            <param name="value">Il valore booleano da convertire.</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Restituisce Visibility.Collapsed se il valore booleano è true; 
            altrimenti, restituisce Visibility.visible.
            </returns>
        </member>
        <member name="M:ISE_ODL.Converter.NotBoolToVisibility.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Questo metodo non è implementato e lancia sempre un'eccezione.
            </summary>
            <param name="value">Il valore di visibilità da convertire indietro (non utilizzato).</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Non restituisce nulla poiché il metodo lancia sempre un'eccezione.
            </returns>
            <exception cref="T:System.NotImplementedException">Viene sempre lanciata poiché il metodo non è implementato.</exception>
        </member>
        <member name="T:ISE_ODL.Converter.TimeSpanToHourMinute">
            <summary>
            La classe TimeSpanToHourMinute implementa l'interfaccia IValueConverter
            per convertire valori TimeSpan in stringhe che rappresentano ore e minuti.
            </summary>
        </member>
        <member name="M:ISE_ODL.Converter.TimeSpanToHourMinute.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converte un valore TimeSpan in una stringa che rappresenta l'ora e i minuti.
            </summary>
            <param name="value">Il valore da convertire, atteso di tipo TimeSpan.</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Restituisce una stringa che rappresenta l'ora e i minuti del TimeSpan aggiunto alla data di oggi,
            formattata come ora breve ("t").
            </returns>
            <exception cref="T:System.InvalidCastException">Lanciata se il valore non è di tipo TimeSpan.</exception>
        </member>
        <member name="M:ISE_ODL.Converter.TimeSpanToHourMinute.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Questo metodo non è implementato e lancia sempre un'eccezione.
            </summary>
            <param name="value">Il valore di visibilità da convertire indietro (non utilizzato).</param>
            <param name="targetType">Il tipo del valore di destinazione (non utilizzato).</param>
            <param name="parameter">Parametro opzionale (non utilizzato).</param>
            <param name="culture">Le informazioni di cultura da utilizzare nella conversione (non utilizzato).</param>
            <returns>
            Non restituisce nulla poiché il metodo lancia sempre un'eccezione.
            </returns>
            <exception cref="T:System.NotImplementedException">Viene sempre lanciata poiché il metodo non è implementato.</exception>
        </member>
        <member name="T:ISE_ODL.Intervallo.Intervallo_V">
            <summary>
            Logica di interazione per Intervallo_V.xaml
            </summary>
            <summary>
            Intervallo_V
            </summary>
        </member>
        <member name="M:ISE_ODL.Intervallo.Intervallo_V.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ISE_ODL.Lista_Odl.ListaOdl_V">
            <summary>
            Logica di interazione per ListaOdl_V.xaml
            </summary>
            <summary>
            ListaOdl_V
            </summary>
        </member>
        <member name="M:ISE_ODL.Lista_Odl.ListaOdl_V.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ISE_ODL.MenuPrincipale_V">
            <summary>
            MenuPrincipale_V
            </summary>
        </member>
        <member name="M:ISE_ODL.MenuPrincipale_V.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ISE_ODL.Odl.OdlInElenco">
            <summary>
            Logica di interazione per OdlInElenco.xaml
            </summary>
            <summary>
            OdlInElenco
            </summary>
        </member>
        <member name="M:ISE_ODL.Odl.OdlInElenco.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ISE_ODL.Odl.OdlVuoto">
            <summary>
            Logica di interazione per OdlVuoto.xaml
            </summary>
            <summary>
            OdlVuoto
            </summary>
        </member>
        <member name="M:ISE_ODL.Odl.OdlVuoto.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ISE_ODL.Odl.Odl_V">
            <summary>
            Logica di interazione per Odl_V.xaml
            </summary>
            <summary>
            Odl_V
            </summary>
        </member>
        <member name="M:ISE_ODL.Odl.Odl_V.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ISE_ODL.Properties.Resources">
            <summary>
              Classe di risorse fortemente tipizzata per la ricerca di stringhe localizzate e così via.
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.ResourceManager">
            <summary>
              Restituisce l'istanza di ResourceManager nella cache utilizzata da questa classe.
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.Culture">
            <summary>
              Esegue l'override della proprietà CurrentUICulture del thread corrente per tutte le
              ricerche di risorse eseguite utilizzando questa classe di risorse fortemente tipizzata.
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.aggiungi">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.btn_OFF">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.btn_ON">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.cestino">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.completate_Odl">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.completato_Odl">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.daCompletare_Odl">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.home">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.impo">
            <summary>
              Cerca una risorsa localizzata di tipo System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.impostazioni">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.logo_ise">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.reso_new">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.resoconto">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.ricarica">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.sottrai">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.stampaReport">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.tutte_Odl">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="P:ISE_ODL.Properties.Resources.vecchia">
            <summary>
              Cerca una risorsa localizzata di tipo System.Byte[].
            </summary>
        </member>
        <member name="T:ISE_ODL.Report.ReportOdl">
            <summary>
            La classe ReportOdl è responsabile della generazione e salvataggio di un report
            basato sui dati Odl e Giorno dal ViewModel dell'applicazione.
            Deriva da BaseCommand.
            </summary>
        </member>
        <member name="M:ISE_ODL.Report.ReportOdl.Execute(System.Object)">
            <summary>
            Esegue il comando per generare e salvare il report.
            </summary>
            <param name="parameter">Il parametro del comando.</param>
        </member>
        <member name="T:ISE_ODL.Resoconto.Giorno.Giorno_V">
            <summary>
            Logica di interazione per Giorno_V.xaml
            </summary>
            <summary>
            Giorno_V
            </summary>
        </member>
        <member name="M:ISE_ODL.Resoconto.Giorno.Giorno_V.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ISE_ODL.Resoconto.Resoconto_V">
            <summary>
            Logica di interazione per Resoconto_V.xaml
            </summary>
            <summary>
            Resoconto_V
            </summary>
        </member>
        <member name="M:ISE_ODL.Resoconto.Resoconto_V.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ISE_ODL.Settings.Settings_V">
            <summary>
            Logica di interazione per Settings_V.xaml
            </summary>
            <summary>
            Settings_V
            </summary>
        </member>
        <member name="M:ISE_ODL.Settings.Settings_V.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
